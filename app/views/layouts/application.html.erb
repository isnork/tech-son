<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Amibeingscammed" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Include Tailwind CSS %>
    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

    <script>
      (function() {
        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        if (timezone) {
          document.cookie = "timezone=" + timezone + ";path=/";
        }
      })();
    </script>
  </head>

  <body>
    <div class="flex min-h-screen">
      <% if controller.controller_name == 'scam_check' %>
        <!-- Toggle Button -->
        <button id="history-toggle" class="fixed top-4 left-4 z-50 bg-[#3423A6] hover:bg-[#2a1c85] text-white p-3 rounded-lg shadow-lg transition-all duration-300 transform hover:scale-105">
          <svg id="toggle-icon" class="w-6 h-6 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>

        <!-- Sidebar for History -->
        <div id="history-sidebar" class="fixed inset-y-0 left-0 z-40 w-80 bg-gray-50 border-r border-gray-200 transform transition-transform duration-300 ease-in-out -translate-x-full">
          <div class="h-full overflow-y-auto p-6">
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-xl font-bold text-[#3423A6] ml-12">Your History</h2>
              <button id="close-sidebar" class="lg:hidden text-gray-500 hover:text-gray-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
              </button>
            </div>
            <% if @scam_checks&.any? %>
              <div class="mb-4 flex justify-end">
                <%= button_to 'Clear History', clear_scam_check_history_path, method: :post, data: { confirm: 'Are you sure you want to clear your entire history? This cannot be undone.' }, class: 'text-xs text-red-600 hover:text-red-800 font-semibold px-3 py-1 rounded bg-red-50 border border-red-200 transition-colors' %>
              </div>
              <div class="space-y-3">
                <% @scam_checks.each do |check| %>
                  <div class="bg-white rounded-lg p-4 shadow-sm border border-gray-200 hover:shadow-md transition-shadow">
                    <div class="flex items-start justify-between">
                      <div class="flex-1">
                        <div class="flex items-center justify-between mb-2">
                          <p class="text-sm text-gray-600">
                            <%= time_ago_in_words(check.created_at) %> ago
                          </p>
                          <% if check.analysis.present? %>
                            <span class="status-badge inline-flex items-center justify-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 w-20">
                              <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                              </svg>
                              Analyzed
                            </span>
                          <% else %>
                            <span class="status-badge inline-flex items-center justify-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 w-20">
                              <svg class="w-3 h-3 mr-1 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                              </svg>
                              Analyzing
                            </span>
                          <% end %>
                        </div>
                        
                        <!-- Collapsed view -->
                        <div id="collapsed-<%= check.id %>" class="collapsed-view">
                          <p class="text-sm font-medium text-gray-900 line-clamp-2 mb-2">
                            <%= truncate(check.description, length: 100) %>
                          </p>
                          <% if check.email.present? %>
                            <p class="text-xs text-gray-500 mb-1">
                              From: <%= check.email %>
                            </p>
                          <% end %>
                          <% if check.url.present? %>
                            <p class="text-xs text-gray-500 mb-2">
                              URL: <%= truncate(check.url, length: 30) %>
                            </p>
                          <% end %>
                        </div>
                        
                        <!-- Expandable details -->
                        <div id="expanded-<%= check.id %>" class="hidden expanded-view">
                          <!-- Full Description -->
                          <div class="mb-3">
                            <h4 class="text-xs font-semibold text-gray-700 mb-1">Description:</h4>
                            <p class="text-sm text-gray-900 leading-relaxed">
                              <%= simple_format(check.description) %>
                            </p>
                          </div>
                          
                          <!-- Email -->
                          <% if check.email.present? %>
                            <div class="mb-3">
                              <h4 class="text-xs font-semibold text-gray-700 mb-1">Sender Email:</h4>
                              <p class="text-sm text-gray-900 break-all">
                                <%= check.email %>
                              </p>
                            </div>
                          <% end %>
                          
                          <!-- URL -->
                          <% if check.url.present? %>
                            <div class="mb-3">
                              <h4 class="text-xs font-semibold text-gray-700 mb-1">Suspicious URL:</h4>
                              <p class="text-sm text-gray-900 break-all">
                                <%= check.url %>
                              </p>
                            </div>
                          <% end %>
                          
                          <!-- Screenshot -->
                          <% if check.screenshot.respond_to?(:attached?) && check.screenshot.attached? %>
                            <div class="mb-3">
                              <h4 class="text-xs font-semibold text-gray-700 mb-1">Screenshot:</h4>
                              <div class="max-w-xs">
                                <%= image_tag check.screenshot, class: "rounded-lg border border-gray-200 max-w-full h-auto" %>
                              </div>
                            </div>
                          <% end %>
                          
                          <!-- Analysis -->
                          <% if check.analysis.present? %>
                            <div class="mb-3">
                              <h4 class="text-xs font-semibold text-gray-700 mb-1">AI Analysis:</h4>
                              <div class="p-3 bg-gray-50 rounded-lg border border-gray-200">
                                <div class="prose prose-sm max-w-none">
                                  <%= simple_format(check.analysis, class: "text-gray-900 text-xs leading-relaxed") %>
                                </div>
                              </div>
                            </div>
                          <% end %>
                        </div>
                        
                        <!-- Toggle button -->
                        <button type="button" 
                                class="text-xs text-[#3423A6] hover:text-[#2a1c85] font-medium transition-colors mt-2"
                                onclick="toggleDetails('<%= check.id %>')">
                          <span id="toggle-text-<%= check.id %>">View Details</span>
                          <svg id="toggle-icon-<%= check.id %>" class="w-3 h-3 inline ml-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                          </svg>
                        </button>
                      </div>
                    </div>
                  </div>
                <% end %>
              </div>
            <% else %>
              <div class="text-center py-8">
                <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                <p class="text-gray-500 text-sm">No previous checks yet</p>
                <p class="text-gray-400 text-xs mt-1">Your scam check history will appear here</p>
              </div>
            <% end %>
          </div>
        </div>

        <!-- Overlay for mobile -->
        <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden lg:hidden"></div>
      <% end %>

      <!-- Main Content -->
      <div id="main-content" class="flex-1 transition-all duration-300 ease-in-out">
        <main class="container mx-auto mt-28 px-5">
          <%= yield %>
        </main>
      </div>
    </div>

    <script>
      // Cache-busting version
      const JS_VERSION = '1.0.5';
      console.log('History button JavaScript loaded, version:', JS_VERSION);
      
      // Function to initialize history button
      function initializeHistoryButton() {
        console.log('Initializing history button...');
        
        const historyToggle = document.getElementById('history-toggle');
        const historySidebar = document.getElementById('history-sidebar');
        const closeSidebar = document.getElementById('close-sidebar');
        const sidebarOverlay = document.getElementById('sidebar-overlay');
        const toggleIcon = document.getElementById('toggle-icon');
        const mainContent = document.getElementById('main-content');
        
        // Only proceed if we have the necessary elements (history button exists)
        if (!historyToggle || !historySidebar || !toggleIcon || !mainContent) {
          console.log('History button elements not found, skipping initialization');
          return;
        }
        
        console.log('History button elements found, setting up event listeners');
        
        // Toggle sidebar
        historyToggle.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          console.log('History button clicked');
          
          const isOpen = historySidebar.classList.contains('translate-x-0');
          
          if (isOpen) {
            // Close sidebar
            historySidebar.classList.remove('translate-x-0');
            historySidebar.classList.add('-translate-x-full');
            toggleIcon.classList.remove('rotate-180');
            if (sidebarOverlay) sidebarOverlay.classList.add('hidden');
            mainContent.classList.remove('ml-80');
          } else {
            // Open sidebar
            historySidebar.classList.remove('-translate-x-full');
            historySidebar.classList.add('translate-x-0');
            toggleIcon.classList.add('rotate-180');
            if (sidebarOverlay) sidebarOverlay.classList.remove('hidden');
            mainContent.classList.add('ml-80');
          }
        });
        
        // Close sidebar when clicking close button
        if (closeSidebar) {
          closeSidebar.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('Close button clicked');
            
            historySidebar.classList.remove('translate-x-0');
            historySidebar.classList.add('-translate-x-full');
            toggleIcon.classList.remove('rotate-180');
            if (sidebarOverlay) sidebarOverlay.classList.add('hidden');
            mainContent.classList.remove('ml-80');
          });
        }
        
        // Close sidebar when clicking overlay
        if (sidebarOverlay) {
          sidebarOverlay.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('Overlay clicked');
            
            historySidebar.classList.remove('translate-x-0');
            historySidebar.classList.add('-translate-x-full');
            toggleIcon.classList.remove('rotate-180');
            sidebarOverlay.classList.add('hidden');
            mainContent.classList.remove('ml-80');
          });
        }
        
        // Auto-refresh history content
        function refreshHistoryContent() {
          const historyContent = document.getElementById('history-content');
          if (historyContent) {
            fetch('/scam_check')
              .then(response => response.text())
              .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newHistoryContent = doc.getElementById('history-content');
                if (newHistoryContent) {
                  historyContent.innerHTML = newHistoryContent.innerHTML;
                }
              })
              .catch(error => {
                console.error('Error refreshing history:', error);
              });
          }
        }
        
        // Refresh history every 30 seconds
        setInterval(refreshHistoryContent, 30000);
        
        console.log('History button initialization complete');
      }
      
      // Run initialization when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeHistoryButton);
      } else {
        // DOM is already loaded
        initializeHistoryButton();
      }
      
      // Also run initialization when the page becomes visible (for navigation)
      document.addEventListener('visibilitychange', function() {
        if (!document.hidden) {
          console.log('Page became visible, re-initializing history button');
          setTimeout(initializeHistoryButton, 100);
        }
      });
      
      // Run initialization after a short delay to ensure all elements are loaded
      setTimeout(initializeHistoryButton, 500);
      
      // Run initialization again after a longer delay for Heroku
      setTimeout(initializeHistoryButton, 2000);

      // Global function for toggling analysis
      function toggleAnalysis(checkId) {
        const analysisDiv = document.getElementById(`analysis-${checkId}`);
        const toggleText = document.getElementById(`toggle-text-${checkId}`);
        const toggleIcon = document.getElementById(`toggle-icon-${checkId}`);
        
        if (analysisDiv && toggleText && toggleIcon) {
          if (analysisDiv.classList.contains('hidden')) {
            analysisDiv.classList.remove('hidden');
            toggleText.textContent = 'Hide Analysis';
            toggleIcon.style.transform = 'rotate(180deg)';
          } else {
            analysisDiv.classList.add('hidden');
            toggleText.textContent = 'View Analysis';
            toggleIcon.style.transform = 'rotate(0deg)';
          }
        }
      }

      // Global function for toggling details
      function toggleDetails(checkId) {
        const collapsedView = document.getElementById(`collapsed-${checkId}`);
        const expandedView = document.getElementById(`expanded-${checkId}`);
        const toggleText = document.getElementById(`toggle-text-${checkId}`);
        const toggleIcon = document.getElementById(`toggle-icon-${checkId}`);
        
        if (collapsedView && expandedView && toggleText && toggleIcon) {
          if (collapsedView.classList.contains('collapsed-view')) {
            collapsedView.classList.remove('collapsed-view');
            collapsedView.classList.add('hidden');
            expandedView.classList.remove('hidden');
            expandedView.classList.add('expanded-view');
            toggleText.textContent = 'Hide Details';
            toggleIcon.style.transform = 'rotate(180deg)';
          } else {
            collapsedView.classList.add('collapsed-view');
            collapsedView.classList.remove('hidden');
            expandedView.classList.add('hidden');
            expandedView.classList.remove('expanded-view');
            toggleText.textContent = 'View Details';
            toggleIcon.style.transform = 'rotate(0deg)';
          }
        }
      }
    </script>
  </body>
</html>
